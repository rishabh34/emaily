{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/Documents/full stack application/server/client/src/components/Payments.js\";\nimport React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { loadStripe } from '@stripe/stripe-js'; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe('pk_test_51HVvsBJR0v3PddXYsaIokz4tz8azvx0m5fQ2wbl0UWvPS0C1tTcO2vTgbsziPrQNWV6nwgkB2O5cu9s3qDPMZwQ700mPQpO2vQ');\n\nclass Payments extends Component {\n  render() {\n    const handleClick = async event => {\n      // Get Stripe.js instance\n      const stripe = await stripePromise; // Call your backend to create the Checkout Session\n\n      const response = await fetch('/api/stripe', {\n        method: 'POST'\n      });\n      const session = await response.json(); // When the customer clicks on the button, redirect them to Checkout.\n\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n\n      if (result.error) {// If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    };\n\n    return (\n      /*#__PURE__*/\n      // <StripeCheckout\n      //   name=\"Emaily\"\n      //   description=\"$5 for 5 email credits\"\n      //   amount={500}\n      //   token={(token) => this.props.handleToken(token)}\n      //   stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      // >\n      //   <button className=\"btn waves-effect waves-light\">Add credits</button>\n      // </StripeCheckout>\n      React.createElement(\"button\", {\n        role: \"link\",\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, \"Checkout\")\n    );\n  }\n\n}\n\nexport default connect(null, actions)(Payments);","map":{"version":3,"sources":["/Users/rishabh/Documents/full stack application/server/client/src/components/Payments.js"],"names":["React","Component","StripeCheckout","connect","actions","loadStripe","stripePromise","Payments","render","handleClick","event","stripe","response","fetch","method","session","json","result","redirectToCheckout","sessionId","id","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;AACA;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAC9B,6GAD8B,CAAhC;;AAIA,MAAME,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC;AACA,YAAMC,MAAM,GAAG,MAAML,aAArB,CAFmC,CAInC;;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE;AADkC,OAAhB,CAA5B;AAIA,YAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB,CATmC,CAWnC;;AACA,YAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,kBAAP,CAA0B;AAC7CC,QAAAA,SAAS,EAAEJ,OAAO,CAACK;AAD0B,OAA1B,CAArB;;AAIA,UAAIH,MAAM,CAACI,KAAX,EAAkB,CAChB;AACA;AACA;AACD;AACF,KArBD;;AAsBA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAEZ,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAeD;;AAvC8B;;AA0CjC,eAAeN,OAAO,CAAC,IAAD,EAAOC,OAAP,CAAP,CAAuBG,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport { loadStripe } from '@stripe/stripe-js';\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\n  'pk_test_51HVvsBJR0v3PddXYsaIokz4tz8azvx0m5fQ2wbl0UWvPS0C1tTcO2vTgbsziPrQNWV6nwgkB2O5cu9s3qDPMZwQ700mPQpO2vQ'\n);\n\nclass Payments extends Component {\n  render() {\n    const handleClick = async (event) => {\n      // Get Stripe.js instance\n      const stripe = await stripePromise;\n\n      // Call your backend to create the Checkout Session\n      const response = await fetch('/api/stripe', {\n        method: 'POST',\n      });\n\n      const session = await response.json();\n\n      // When the customer clicks on the button, redirect them to Checkout.\n      const result = await stripe.redirectToCheckout({\n        sessionId: session.id,\n      });\n\n      if (result.error) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    };\n    return (\n      // <StripeCheckout\n      //   name=\"Emaily\"\n      //   description=\"$5 for 5 email credits\"\n      //   amount={500}\n      //   token={(token) => this.props.handleToken(token)}\n      //   stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      // >\n      //   <button className=\"btn waves-effect waves-light\">Add credits</button>\n      // </StripeCheckout>\n\n      <button role=\"link\" onClick={handleClick}>\n        Checkout\n      </button>\n    );\n  }\n}\n\nexport default connect(null, actions)(Payments);\n"]},"metadata":{},"sourceType":"module"}